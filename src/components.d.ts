/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import '@ionic/core';

import { WebCamera as AuthPage } from './components/auth-page/auth-page';

interface HTMLAuthPageElement extends AuthPage, HTMLElement {
}
declare var HTMLAuthPageElement: {
  prototype: HTMLAuthPageElement;
  new (): HTMLAuthPageElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "auth-page": HTMLAuthPageElement;
  }
  interface ElementTagNameMap {
      "auth-page": HTMLAuthPageElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "auth-page": JSXElements.AuthPageAttributes;
      }
  }
  namespace JSXElements {
      export interface AuthPageAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          history?: any
      }
  }
}

import { ImagesPage as ImagesPage } from './components/images-page/images-page';

interface HTMLImagesPageElement extends ImagesPage, HTMLElement {
}
declare var HTMLImagesPageElement: {
  prototype: HTMLImagesPageElement;
  new (): HTMLImagesPageElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "images-page": HTMLImagesPageElement;
  }
  interface ElementTagNameMap {
      "images-page": HTMLImagesPageElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "images-page": JSXElements.ImagesPageAttributes;
      }
  }
  namespace JSXElements {
      export interface ImagesPageAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
      }
  }
}

import { MainPage as MainPage } from './components/main-page/main-page';

interface HTMLMainPageElement extends MainPage, HTMLElement {
}
declare var HTMLMainPageElement: {
  prototype: HTMLMainPageElement;
  new (): HTMLMainPageElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "main-page": HTMLMainPageElement;
  }
  interface ElementTagNameMap {
      "main-page": HTMLMainPageElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "main-page": JSXElements.MainPageAttributes;
      }
  }
  namespace JSXElements {
      export interface MainPageAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          history?: any
      }
  }
}

import { WebCamera as WebCamera } from './components/web-camera/web-camera';

interface HTMLWebCameraElement extends WebCamera, HTMLElement {
}
declare var HTMLWebCameraElement: {
  prototype: HTMLWebCameraElement;
  new (): HTMLWebCameraElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "web-camera": HTMLWebCameraElement;
  }
  interface ElementTagNameMap {
      "web-camera": HTMLWebCameraElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "web-camera": JSXElements.WebCameraAttributes;
      }
  }
  namespace JSXElements {
      export interface WebCameraAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
      }
  }
}

